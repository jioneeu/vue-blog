{
  "Algorithm": [
    {
      "id": "eng-stack-infix-to-postfix",
      "date": "09.12.20",
      "title": "Reverse Polish Notation, RPN",
      "description": "We can use stack to convert an expression from infix to postfix.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-stack-infix-to-postfix",
      "date": "09.12.20",
      "title": "後置記法・逆ポーランド記法に変換",
      "description": "スタックを使って中置記法の式を後置記法の式「Reverse Polish Notation」に変換するアルゴリズム。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-stack-infix-to-postfix",
      "date": "09.12.20",
      "title": "중위표기식(Infix) 후위표기식(Postfix)으로 변환하기",
      "description": "스택을 이용해 중위표기식을 후위표기식으로 변환하는 알고리즘.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-sorting-counting",
      "date": "08.12.20",
      "title": "What is Counting Sort?",
      "description": "Counting sort is an algorithm for sorting a collection of objects according to keys that are small integers.",
      "published": false,
      "lang": "eng"
    },
    {
      "id": "jap-sorting-counting",
      "date": "08.12.20",
      "title": "Countingソートとは",
      "description": "",
      "published": false,
      "lang": "jap"
    },
    {
      "id": "kor-sorting-counting",
      "date": "08.12.20",
      "title": "계수 정렬(Counting Sort)이란",
      "description": "오브젝트의 키(key), 인덱스, 등 숫자를 가지고 정렬하는 알고리즘.",
      "published": false,
      "lang": "false"
    },
    {
      "id": "eng-sorting-quick",
      "date": "08.12.20",
      "title": "What is Quick Sort?",
      "description": "Quick sort is an efficient sorting algorithm that can be faster than the merge or heap sort - if implemented correctly.",
      "published": false,
      "lang": "eng"
    },
    {
      "id": "jap-sorting-quick",
      "date": "08.12.20",
      "title": "Quickソートとは",
      "description": "",
      "published": false,
      "lang": "jap"
    },
    {
      "id": "kor-sorting-quick",
      "date": "08.12.20",
      "title": "퀵 정렬(Quick Sort)이란",
      "description": "구현 방식에 따라 병할정렬과 힙정렬보다 빠른 효율적인 정렬 알고리즘.",
      "published": false,
      "lang": "kor"
    },
    {
      "id": "eng-sorting-bubble",
      "date": "07.09.20",
      "title": "What is Bubble Sort?",
      "description": "Bubble sort is the simplest sorting algorithm which works by repeatedly comparing and swapping two adjacent elements if they're in the wrong order.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-sorting-bubble",
      "date": "07.09.20",
      "title": "バブルソート「Bubble Sort」とは",
      "description": "隣接する2個の要素を反復的に比較して、位置を変えながら整列が行われるアルゴリズム。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-sorting-bubble",
      "date": "07.09.20",
      "title": "거품 정렬(Bubble Sort)이란",
      "description": "인접한 두 요소를 비교하고 순서가 틀릴 시 서로 위치를 바꾸는 과정을 반복하며 정렬을 하는 알고리즘.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-sorting-merge",
      "date": "06.26.20",
      "title": "What is Merge Sort?",
      "description": "Merge sort is an efficient comparison-based, divide-and-conquer algorithm invented by John von Neumann in 1945.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-sorting-merge",
      "date": "06.26.20",
      "title": "マージソート「Merge Sort」とは",
      "description": "分割統治「Divide-and-Conquer」アルゴリズムと呼ばれる効率的なアルゴリズム。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-sorting-merge",
      "date": "06.26.20",
      "title": "병합 정렬(Merge Sort)이란",
      "description": "존 폰 노이만(John von Neumann)이 고안한 분할정복(divide-and-conquer) 방식의 효율적인 정렬 알고리즘.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-sorting-selection",
      "date": "06.19.20",
      "title": "What is Selection Sort?",
      "description": "Selection sort is an in-place comparison sorting algorithm. Generally it performs worse than the insertion sort on larger lists.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-sorting-selection",
      "date": "06.19.20",
      "title": "選択ソート「Selection Sort」とは",
      "description": "In-placeアルゴリズムの一つ。一般的に挿入ソートよりファフォマンスが悪い。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-sorting-selection",
      "date": "06.19.20",
      "title": "선택 정렬(Selection Sort)이란",
      "description": "제자리 정렬 알고리즘 중 하나. 일반적으로 삽입 정렬보다 느린 정렬 속도를 가진다.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-sorting-insertion",
      "date": "06.12.20",
      "title": "What is Insertion Sort?",
      "description": "Insertion sort is an efficient sorting algorithm for sorting smaller sets of data.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-sorting-insertion",
      "date": "06.12.20",
      "title": "挿入ソート「Insertion Sort」とは",
      "description": "少ない数のデータを整列するとき効率的なアルゴリズム。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-sorting-insertion",
      "date": "06.12.20",
      "title": "삽입 정렬(Insertion Sort)이란",
      "description": "적은 수의 자료들을 정렬할 때 효율적인 절령 알고리즘.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-graph-bfs",
      "date": "06.11.20",
      "title": "Graph - Breadth First Search (BFS)",
      "description": "BFS starts at the root (given) node and explores all of the neighbor nodes at the present depth prior to moving on to the nodes at the next depth level.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-graph-bfs",
      "date": "06.11.20",
      "title": "グラフ・幅優先探索（BFS）",
      "description": "近隣のノードたちから探索するアルゴリズム。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-graph-bfs",
      "date": "06.11.20",
      "title": "그래프 - 넓이 우선 탐색 (BFS)",
      "description": "루트 노드에서 시작해 인접한 노드들을 먼저 탐색하는 알고리즘.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-graph-dfs",
      "date": "06.10.20",
      "title": "Graph - Depth First Search (DFS)",
      "description": "DFS starts at the root (given) node and explores as deep as possible along each branch before backtracking.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-graph-dfs",
      "date": "06.10.20",
      "title": "グラフ・深さ優先探索（DFS）",
      "description": " rootノードから始めてもう走査ができないノードまで深く探索するアルゴリズム。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-graph-dfs",
      "date": "06.10.20",
      "title": "그래프 - 깊이 우선 탐색 (DFS)",
      "description": "루트 노드에서 시작해 다음 분기로 넘어가기 전, 해당 분기를 끝까지 탐색하는 알고리즘.",
      "published": true,
      "lang": "kor"
    }

  ],
  "DataStructure": [
    {
      "id": "eng-binaryheap",
      "date": "08.13.20",
      "title": "What is Binary Heap?",
      "description": "",
      "published": false,
      "lang": "eng"
    },
    {
      "id": "eng-bst",
      "date": "08.12.20",
      "title": "Ruby・Binary Search Tree",
      "description": "",
      "published": false,
      "lang": "eng"
    },
    {
      "id": "kor-bst",
      "date": "08.12.20",
      "title": "Ruby・Binary Search Tree",
      "description": "",
      "published": false,
      "lang": "kor"
    },
    {
      "id": "jap-bst",
      "date": "08.12.20",
      "title": "Ruby・Binary Search Tree",
      "description": "",
      "published": false,
      "lang": "jap"
    },
    {
      "id": "eng-binarytree",
      "date": "08.12.20",
      "title": "Ruby・Binary Tree",
      "description": "",
      "published": false,
      "lang": "eng"
    },
    {
      "id": "eng-tree",
      "date": "08.12.20",
      "title": "What is tree?",
      "description": "",
      "published": false,
      "lang": "eng"
    },
    {
      "id": "eng-queue",
      "date": "08.10.20",
      "title": "Ruby・Queue",
      "description": "Queue is a linear data structure which follows a particular order in which the operations are performed -- FIFO.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "kor-queue",
      "date": "08.10.20",
      "title": "Ruby・큐(Queue)란",
      "description": "First-In-First-Out (FIFO)구조로 자료를 저장하는 형식의 선형 자료구조.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "jap-queue",
      "date": "08.10.20",
      "title": "Ruby・キュー(Queue)とは",
      "description": "First-In-First-Out（FIFO）の方法でデータを保存するデータ構造。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "eng-stack",
      "date": "08.10.20",
      "title": "Ruby・Stack",
      "description": "Stack is a linear data structure which follows a particular order in which the operations are performed -- LIFO or FILO.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "kor-stack",
      "date": "08.10.20",
      "title": "Ruby・스택(Stack)이란",
      "description": "Last-In-First-Out (LIFO) 또는 First-In-Last-Out (FILO) 구조로 자료를 저장하는 선형 자료구조.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "jap-stack",
      "date": "08.10.20",
      "title": "Ruby・スタック(Stack)とは",
      "description": "Last-In-First-Out（LIFO）またはFirst-In-Last-Out（FILO）方法でデータを保存するデータ構造。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "eng-array",
      "date": "08.03.20",
      "title": "Ruby・Array",
      "description": "Array is a data structure consisting of a collection of elements, each identified by at least one array index or key.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-array",
      "date": "08.03.20",
      "title": "Ruby・配列(Array)とは",
      "description": "同じデータ型の変数を含むコンテナ。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-array",
      "date": "08.03.20",
      "title": "Ruby・배열(Array)이란",
      "description": "같은 타입형의 변수들로 이루어진 유한 집합. 각각의 요소들은 메모리 상에 연속적으로 나열되어 있다.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-linked-list-circular",
      "date": "07.18.20",
      "title": "Ruby・Circular Linked List",
      "description": "Circular linked list is a variation of a linked list where the first node points to the last node and vice versa.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-linked-list-circular",
      "date": "07.18.20",
      "title": "Ruby・循環リストと(Circular Linked List)は",
      "description": "最初と最後のノードがつながってる連結リスト。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-linked-list-circular",
      "date": "07.18.20",
      "title": "Ruby・원형 연결 리스트(Circular Linked List)란",
      "description": "첫 번째와 마지막 노드가 서로 연결되어 있는 리스트.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-linked-list-doubly",
      "date": "07.11.20",
      "title": "Ruby・Doubly Linked List",
      "description": "Doubly linked list is a bidirectional linked list, that is, it can be traversed in either direction.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-linked-list-doubly",
      "date": "07.11.20",
      "title": "Ruby・双方向リスト(Doubly Linked List)とは",
      "description": "双方向のポインタを持ってるノードからなるリスト。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-linked-list-doubly",
      "date": "07.11.20",
      "title": "Ruby・이중 연결 리스트(Doubly Linked List)란",
      "description": "양방향의 포인터를 가진 노드로 이루어진 리스트.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-linked-list-singly",
      "date": "05.09.20",
      "title": "Ruby・Singly Linked List",
      "description": "Singly linked list is a unidirectional linked list, that is, it can only traverse in forward direction.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-linked-list-singly",
      "date": "05.09.20",
      "title": "Ruby・単方向リスト(Singly Linked List)とは",
      "description": "単方向のポインタを持ってるノードからなるリスト。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-linked-list-singly",
      "date": "05.09.20",
      "title": "Ruby・단일 연결 리스트(Singly Linked List)란",
      "description": "단일 방향의 포인터를 가진 노드로 이루어진 리스트.",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-linked-list",
      "date": "05.09.20",
      "title": "What is Linked List?",
      "description": "A linked list is a linear collection of data elements whose order is not given by their physical placement in memory.",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-linked-list",
      "date": "05.09.20",
      "title": "連結リスト(Linked List)とは",
      "description": "メモリに離れているnodeたちを連結しながらデータを保存するデータ構造。",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-linked-list",
      "date": "05.09.20",
      "title": "연결 리스트(Linked List)란",
      "description": "데이터와 포인터를 가지는 노드를 한 줄로 연결해서 데이터를 저장하는 방식의 자료구조.",
      "published": true,
      "lang": "kor"
    }
  ],
  "DCP": [
    {
      "id": "eng-dcp-1",
      "date": "Nov 5, 2020",
      "title": "Daily Coding Problem 1",
      "description": "DCP 1 asked by Google",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "kor-dcp-1",
      "date": "Nov 5, 2020",
      "title": "Daily Coding Problem 1",
      "description": "DCP 1 asked by Google",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "jap-dcp-1",
      "date": "Nov 5, 2020",
      "title": "Daily Coding Problem 1",
      "description": "DCP 1 asked by Google",
      "published": true,
      "lang": "jap"
    }
  ],
  "PS": [
    {
      "id": "kor-boj-2167",
      "date": "Aug 08, 2020",
      "title": "BOJ 2167 - 2차원 배열의 합",
      "description": "백준 온라인 저지 문제 2167  풀이",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-apc2020",
      "date": "Jul 11, 2020",
      "title": "Alsing Programming Contest 2020",
      "description": "Solutions to Alsing Programming Contest 2020",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-apc2020",
      "date": "Jul 11, 2020",
      "title": "Alsing Programming Contest 2020",
      "description": "Solutions to Alsing Programming Contest 2020",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-apc2020",
      "date": "Jul 11, 2020",
      "title": "Alsing Programming Contest 2020",
      "description": "Solutions to Alsing Programming Contest 2020",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-abc173",
      "date": "Jul 05, 2020",
      "title": "AtCoder Beginner Contest 173",
      "description": "ABC 173 Solutions",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-abc173",
      "date": "Jul 05, 2020",
      "title": "AtCoder Beginner Contest 173",
      "description": "ABC 173 Solutions",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-abc173",
      "date": "Jul 05, 2020",
      "title": "AtCoder Beginner Contest 173",
      "description": "ABC 173 Solutions",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-abc172",
      "date": "Jun 27, 2020",
      "title": "AtCoder Beginner Contest 172",
      "description": "ABC 172 Solutions",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-abc172",
      "date": "Jun 27, 2020",
      "title": "AtCoder Beginner Contest 172",
      "description": "ABC 172 Solutions",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-abc172",
      "date": "Jun 27, 2020",
      "title": "AtCoder Beginner Contest 172",
      "description": "ABC 172 Solutions",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-abc169",
      "date": "May 31, 2020",
      "title": "AtCoder Beginner Contest 169",
      "description": "ABC 169 Solutions",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-abc169",
      "date": "May 31, 2020",
      "title": "AtCoder Beginner Contest 169",
      "description": "ABC 169 Solutions",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-abc169",
      "date": "May 31, 2020",
      "title": "AtCoder Beginner Contest 169",
      "description": "ABC 169 Solutions",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-abc168",
      "date": "May 17, 2020",
      "title": "AtCoder Beginner Contest 168",
      "description": "ABC 168 Solutions",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-abc168",
      "date": "May 17, 2020",
      "title": "AtCoder Beginner Contest 168",
      "description": "ABC 168 Solutions",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-abc168",
      "date": "May 17, 2020",
      "title": "AtCoder Beginner Contest 168",
      "description": "ABC 168 Solutions",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-abc167",
      "date": "May 10, 2020",
      "title": "AtCoder Beginner Contest 167",
      "description": "ABC 167 Solutions",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-abc167",
      "date": "May 10, 2020",
      "title": "AtCoder Beginner Contest 167",
      "description": "ABC 167 Solutions",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-abc167",
      "date": "May 10, 2020",
      "title": "AtCoder Beginner Contest 167",
      "description": "ABC 167 Solutions",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-abc166",
      "date": "May 03, 2020",
      "title": "AtCoder Beginner Contest 166",
      "description": "ABC 166 Solutions",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-abc166",
      "date": "May 03, 2020",
      "title": "AtCoder Beginner Contest 166",
      "description": "ABC 166 Solutions",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-abc166",
      "date": "May 03, 2020",
      "title": "AtCoder Beginner Contest 166",
      "description": "ABC 166 Solutions",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-abc162",
      "date": "Apr 12, 2020",
      "title": "AtCoder Beginner Contest 162",
      "description": "ABC 162 Solutions",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-abc162",
      "date": "Apr 12, 2020",
      "title": "AtCoder Beginner Contest 162",
      "description": "ABC 162 Solutions",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-abc162",
      "date": "Apr 12, 2020",
      "title": "AtCoder Beginner Contest 162",
      "description": "ABC 162 Solutions",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-abc161",
      "date": "Apr 04, 2020",
      "title": "AtCoder Beginner Contest 161",
      "description": "ABC 161 Solutions",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-abc161",
      "date": "Apr 04, 2020",
      "title": "AtCoder Beginner Contest 161",
      "description": "ABC 161 Solutions",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-abc161",
      "date": "Apr 04, 2020",
      "title": "AtCoder Beginner Contest 161",
      "description": "ABC 161 Solutions",
      "published": true,
      "lang": "kor"
    },
    {
      "id": "eng-abc153",
      "date": "Feb 04, 2020",
      "title": "AtCoder Beginner Contest 153",
      "description": "ABC 153 Solutions",
      "published": true,
      "lang": "eng"
    },
    {
      "id": "jap-abc153",
      "date": "Feb 04, 2020",
      "title": "AtCoder Beginner Contest 153",
      "description": "ABC 153 Solutions",
      "published": true,
      "lang": "jap"
    },
    {
      "id": "kor-abc153",
      "date": "Feb 04, 2020",
      "title": "AtCoder Beginner Contest 153",
      "description": "ABC 153 Solutions",
      "published": true,
      "lang": "kor"
    }
  ]
}